# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import PyServer_pb2 as PyServer__pb2


class PyServerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.sendRewards = channel.unary_unary(
        '/PyServer.PyServer/sendRewards',
        request_serializer=PyServer__pb2.RewardRequest.SerializeToString,
        response_deserializer=PyServer__pb2.RewardResponse.FromString,
        )
    self.sentLocation = channel.unary_unary(
        '/PyServer.PyServer/sentLocation',
        request_serializer=PyServer__pb2.Location.SerializeToString,
        response_deserializer=PyServer__pb2.Action.FromString,
        )


class PyServerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def sendRewards(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def sentLocation(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PyServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'sendRewards': grpc.unary_unary_rpc_method_handler(
          servicer.sendRewards,
          request_deserializer=PyServer__pb2.RewardRequest.FromString,
          response_serializer=PyServer__pb2.RewardResponse.SerializeToString,
      ),
      'sentLocation': grpc.unary_unary_rpc_method_handler(
          servicer.sentLocation,
          request_deserializer=PyServer__pb2.Location.FromString,
          response_serializer=PyServer__pb2.Action.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'PyServer.PyServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
